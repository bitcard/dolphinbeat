// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OperationType int32

const (
	OperationType_ROTATE OperationType = 0
	OperationType_GTID   OperationType = 1
	OperationType_BEGIN  OperationType = 2
	OperationType_COMMIT OperationType = 3
	OperationType_INSERT OperationType = 4
	OperationType_UPDATE OperationType = 5
	OperationType_DELETE OperationType = 6
	OperationType_QUERY  OperationType = 7
	OperationType_DDL    OperationType = 8
)

var OperationType_name = map[int32]string{
	0: "ROTATE",
	1: "GTID",
	2: "BEGIN",
	3: "COMMIT",
	4: "INSERT",
	5: "UPDATE",
	6: "DELETE",
	7: "QUERY",
	8: "DDL",
}

var OperationType_value = map[string]int32{
	"ROTATE": 0,
	"GTID":   1,
	"BEGIN":  2,
	"COMMIT": 3,
	"INSERT": 4,
	"UPDATE": 5,
	"DELETE": 6,
	"QUERY":  7,
	"DDL":    8,
}

func (x OperationType) String() string {
	return proto.EnumName(OperationType_name, int32(x))
}

func (OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

type InnerType int32

const (
	InnerType_DECIMAL     InnerType = 0
	InnerType_TINY        InnerType = 1
	InnerType_SHORT       InnerType = 2
	InnerType_LONG        InnerType = 3
	InnerType_FLOAT       InnerType = 4
	InnerType_DOUBLE      InnerType = 5
	InnerType_NULL        InnerType = 6
	InnerType_TIMESTAMP   InnerType = 7
	InnerType_LONGLONG    InnerType = 8
	InnerType_INT24       InnerType = 9
	InnerType_DATE        InnerType = 10
	InnerType_TIME        InnerType = 11
	InnerType_DATETIME    InnerType = 12
	InnerType_YEAR        InnerType = 13
	InnerType_NEWDATE     InnerType = 14
	InnerType_VARCHAR     InnerType = 15
	InnerType_BIT         InnerType = 16
	InnerType_TIMESTAMP2  InnerType = 17
	InnerType_DATETIME2   InnerType = 18
	InnerType_TIME2       InnerType = 19
	InnerType_JSON        InnerType = 245
	InnerType_NEWDECIMAL  InnerType = 246
	InnerType_ENUM        InnerType = 247
	InnerType_SET         InnerType = 248
	InnerType_TINY_BLOB   InnerType = 249
	InnerType_MEDIUM_BLOB InnerType = 250
	InnerType_LONG_BLOB   InnerType = 251
	InnerType_BLOB        InnerType = 252
	InnerType_VAR_STRING  InnerType = 253
	InnerType_STRING      InnerType = 254
	InnerType_GEOMETRY    InnerType = 255
)

var InnerType_name = map[int32]string{
	0:   "DECIMAL",
	1:   "TINY",
	2:   "SHORT",
	3:   "LONG",
	4:   "FLOAT",
	5:   "DOUBLE",
	6:   "NULL",
	7:   "TIMESTAMP",
	8:   "LONGLONG",
	9:   "INT24",
	10:  "DATE",
	11:  "TIME",
	12:  "DATETIME",
	13:  "YEAR",
	14:  "NEWDATE",
	15:  "VARCHAR",
	16:  "BIT",
	17:  "TIMESTAMP2",
	18:  "DATETIME2",
	19:  "TIME2",
	245: "JSON",
	246: "NEWDECIMAL",
	247: "ENUM",
	248: "SET",
	249: "TINY_BLOB",
	250: "MEDIUM_BLOB",
	251: "LONG_BLOB",
	252: "BLOB",
	253: "VAR_STRING",
	254: "STRING",
	255: "GEOMETRY",
}

var InnerType_value = map[string]int32{
	"DECIMAL":     0,
	"TINY":        1,
	"SHORT":       2,
	"LONG":        3,
	"FLOAT":       4,
	"DOUBLE":      5,
	"NULL":        6,
	"TIMESTAMP":   7,
	"LONGLONG":    8,
	"INT24":       9,
	"DATE":        10,
	"TIME":        11,
	"DATETIME":    12,
	"YEAR":        13,
	"NEWDATE":     14,
	"VARCHAR":     15,
	"BIT":         16,
	"TIMESTAMP2":  17,
	"DATETIME2":   18,
	"TIME2":       19,
	"JSON":        245,
	"NEWDECIMAL":  246,
	"ENUM":        247,
	"SET":         248,
	"TINY_BLOB":   249,
	"MEDIUM_BLOB": 250,
	"LONG_BLOB":   251,
	"BLOB":        252,
	"VAR_STRING":  253,
	"STRING":      254,
	"GEOMETRY":    255,
}

func (x InnerType) String() string {
	return proto.EnumName(InnerType_name, int32(x))
}

func (InnerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{1}
}

type Compression int32

const (
	Compression_NONE Compression = 0
	Compression_ZLIB Compression = 1
	Compression_GZIP Compression = 2
)

var Compression_name = map[int32]string{
	0: "NONE",
	1: "ZLIB",
	2: "GZIP",
}

var Compression_value = map[string]int32{
	"NONE": 0,
	"ZLIB": 1,
	"GZIP": 2,
}

func (x Compression) String() string {
	return proto.EnumName(Compression_name, int32(x))
}

func (Compression) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{2}
}

type Message struct {
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// The producer who produces this kafka message
	ProducerId uint64 `protobuf:"varint,2,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	// The sequence number of message, we dedup by this number
	Seq uint64 `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	// If this message is a fragment, and there are more fragments coming.
	// Only all fragments of the same group received, we can unmarshal the payload.
	MoreFragment bool `protobuf:"varint,6,opt,name=more_fragment,json=moreFragment,proto3" json:"more_fragment,omitempty"`
	// The group identify of those fragment
	GroupId              uint64      `protobuf:"varint,7,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Compression          Compression `protobuf:"varint,8,opt,name=compression,proto3,enum=Compression" json:"compression,omitempty"`
	Payload              []byte      `protobuf:"bytes,15,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Message) GetProducerId() uint64 {
	if m != nil {
		return m.ProducerId
	}
	return 0
}

func (m *Message) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Message) GetMoreFragment() bool {
	if m != nil {
		return m.MoreFragment
	}
	return false
}

func (m *Message) GetGroupId() uint64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *Message) GetCompression() Compression {
	if m != nil {
		return m.Compression
	}
	return Compression_NONE
}

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Payload struct {
	Ops                  []*Operation `protobuf:"bytes,1,rep,name=ops,proto3" json:"ops,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{1}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetOps() []*Operation {
	if m != nil {
		return m.Ops
	}
	return nil
}

type Column struct {
	IsNull               bool     `protobuf:"varint,1,opt,name=is_null,json=isNull,proto3" json:"is_null,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Column) Reset()         { *m = Column{} }
func (m *Column) String() string { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()    {}
func (*Column) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{2}
}

func (m *Column) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Column.Unmarshal(m, b)
}
func (m *Column) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Column.Marshal(b, m, deterministic)
}
func (m *Column) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Column.Merge(m, src)
}
func (m *Column) XXX_Size() int {
	return xxx_messageInfo_Column.Size(m)
}
func (m *Column) XXX_DiscardUnknown() {
	xxx_messageInfo_Column.DiscardUnknown(m)
}

var xxx_messageInfo_Column proto.InternalMessageInfo

func (m *Column) GetIsNull() bool {
	if m != nil {
		return m.IsNull
	}
	return false
}

func (m *Column) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Row struct {
	Before               []*Column `protobuf:"bytes,1,rep,name=before,proto3" json:"before,omitempty"`
	After                []*Column `protobuf:"bytes,2,rep,name=after,proto3" json:"after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{3}
}

func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetBefore() []*Column {
	if m != nil {
		return m.Before
	}
	return nil
}

func (m *Row) GetAfter() []*Column {
	if m != nil {
		return m.After
	}
	return nil
}

type ColumnDef struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SqlType              string    `protobuf:"bytes,2,opt,name=sql_type,json=sqlType,proto3" json:"sql_type,omitempty"`
	InnerType            InnerType `protobuf:"varint,3,opt,name=inner_type,json=innerType,proto3,enum=InnerType" json:"inner_type,omitempty"`
	Unsigned             bool      `protobuf:"varint,4,opt,name=unsigned,proto3" json:"unsigned,omitempty"`
	Key                  string    `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	Charset              string    `protobuf:"bytes,6,opt,name=charset,proto3" json:"charset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ColumnDef) Reset()         { *m = ColumnDef{} }
func (m *ColumnDef) String() string { return proto.CompactTextString(m) }
func (*ColumnDef) ProtoMessage()    {}
func (*ColumnDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{4}
}

func (m *ColumnDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnDef.Unmarshal(m, b)
}
func (m *ColumnDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnDef.Marshal(b, m, deterministic)
}
func (m *ColumnDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnDef.Merge(m, src)
}
func (m *ColumnDef) XXX_Size() int {
	return xxx_messageInfo_ColumnDef.Size(m)
}
func (m *ColumnDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnDef.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnDef proto.InternalMessageInfo

func (m *ColumnDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ColumnDef) GetSqlType() string {
	if m != nil {
		return m.SqlType
	}
	return ""
}

func (m *ColumnDef) GetInnerType() InnerType {
	if m != nil {
		return m.InnerType
	}
	return InnerType_DECIMAL
}

func (m *ColumnDef) GetUnsigned() bool {
	if m != nil {
		return m.Unsigned
	}
	return false
}

func (m *ColumnDef) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ColumnDef) GetCharset() string {
	if m != nil {
		return m.Charset
	}
	return ""
}

type TableDef struct {
	Database             string       `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Columns              []*ColumnDef `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TableDef) Reset()         { *m = TableDef{} }
func (m *TableDef) String() string { return proto.CompactTextString(m) }
func (*TableDef) ProtoMessage()    {}
func (*TableDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{5}
}

func (m *TableDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableDef.Unmarshal(m, b)
}
func (m *TableDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableDef.Marshal(b, m, deterministic)
}
func (m *TableDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableDef.Merge(m, src)
}
func (m *TableDef) XXX_Size() int {
	return xxx_messageInfo_TableDef.Size(m)
}
func (m *TableDef) XXX_DiscardUnknown() {
	xxx_messageInfo_TableDef.DiscardUnknown(m)
}

var xxx_messageInfo_TableDef proto.InternalMessageInfo

func (m *TableDef) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

func (m *TableDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TableDef) GetColumns() []*ColumnDef {
	if m != nil {
		return m.Columns
	}
	return nil
}

type Progress struct {
	Flavor               string   `protobuf:"bytes,1,opt,name=flavor,proto3" json:"flavor,omitempty"`
	ServerId             uint32   `protobuf:"varint,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	LogName              string   `protobuf:"bytes,3,opt,name=log_name,json=logName,proto3" json:"log_name,omitempty"`
	LogPos               uint32   `protobuf:"varint,4,opt,name=log_pos,json=logPos,proto3" json:"log_pos,omitempty"`
	Gset                 string   `protobuf:"bytes,5,opt,name=gset,proto3" json:"gset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Progress) Reset()         { *m = Progress{} }
func (m *Progress) String() string { return proto.CompactTextString(m) }
func (*Progress) ProtoMessage()    {}
func (*Progress) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{6}
}

func (m *Progress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Progress.Unmarshal(m, b)
}
func (m *Progress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Progress.Marshal(b, m, deterministic)
}
func (m *Progress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Progress.Merge(m, src)
}
func (m *Progress) XXX_Size() int {
	return xxx_messageInfo_Progress.Size(m)
}
func (m *Progress) XXX_DiscardUnknown() {
	xxx_messageInfo_Progress.DiscardUnknown(m)
}

var xxx_messageInfo_Progress proto.InternalMessageInfo

func (m *Progress) GetFlavor() string {
	if m != nil {
		return m.Flavor
	}
	return ""
}

func (m *Progress) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *Progress) GetLogName() string {
	if m != nil {
		return m.LogName
	}
	return ""
}

func (m *Progress) GetLogPos() uint32 {
	if m != nil {
		return m.LogPos
	}
	return 0
}

func (m *Progress) GetGset() string {
	if m != nil {
		return m.Gset
	}
	return ""
}

type OperationHeader struct {
	ServerId             uint32        `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Type                 OperationType `protobuf:"varint,2,opt,name=type,proto3,enum=OperationType" json:"type,omitempty"`
	Timestamp            uint32        `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	LogPos               uint32        `protobuf:"varint,4,opt,name=log_pos,json=logPos,proto3" json:"log_pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OperationHeader) Reset()         { *m = OperationHeader{} }
func (m *OperationHeader) String() string { return proto.CompactTextString(m) }
func (*OperationHeader) ProtoMessage()    {}
func (*OperationHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{7}
}

func (m *OperationHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationHeader.Unmarshal(m, b)
}
func (m *OperationHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationHeader.Marshal(b, m, deterministic)
}
func (m *OperationHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationHeader.Merge(m, src)
}
func (m *OperationHeader) XXX_Size() int {
	return xxx_messageInfo_OperationHeader.Size(m)
}
func (m *OperationHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationHeader.DiscardUnknown(m)
}

var xxx_messageInfo_OperationHeader proto.InternalMessageInfo

func (m *OperationHeader) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *OperationHeader) GetType() OperationType {
	if m != nil {
		return m.Type
	}
	return OperationType_ROTATE
}

func (m *OperationHeader) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *OperationHeader) GetLogPos() uint32 {
	if m != nil {
		return m.LogPos
	}
	return 0
}

type Operation struct {
	Header *OperationHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Next_log_name and next_log_pos field is for Rotate operation
	NextLogName string `protobuf:"bytes,6,opt,name=next_log_name,json=nextLogName,proto3" json:"next_log_name,omitempty"`
	NextLogPos  uint32 `protobuf:"varint,7,opt,name=next_log_pos,json=nextLogPos,proto3" json:"next_log_pos,omitempty"`
	// Gtid, last_committed and sequence_number field is for GTID operation
	Gtid           string `protobuf:"bytes,8,opt,name=gtid,proto3" json:"gtid,omitempty"`
	LastCommitted  int64  `protobuf:"varint,9,opt,name=last_committed,json=lastCommitted,proto3" json:"last_committed,omitempty"`
	SequenceNumber int64  `protobuf:"varint,10,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	// Database and  statement filed is for QUERY/DDL operation
	Database  string `protobuf:"bytes,11,opt,name=database,proto3" json:"database,omitempty"`
	Statement string `protobuf:"bytes,12,opt,name=statement,proto3" json:"statement,omitempty"`
	// Table and rows field is for INSERT/UPDATE/DELETE operation
	Table *TableDef `protobuf:"bytes,13,opt,name=table,proto3" json:"table,omitempty"`
	// Rows field is for INSERT/UPDATE/DELETE operation
	Rows []*Row `protobuf:"bytes,14,rep,name=rows,proto3" json:"rows,omitempty"`
	// Progress field is for COMMIT/DDL operation,represents the gtid_set or file&pos
	Progress             *Progress `protobuf:"bytes,15,opt,name=progress,proto3" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{8}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetHeader() *OperationHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Operation) GetNextLogName() string {
	if m != nil {
		return m.NextLogName
	}
	return ""
}

func (m *Operation) GetNextLogPos() uint32 {
	if m != nil {
		return m.NextLogPos
	}
	return 0
}

func (m *Operation) GetGtid() string {
	if m != nil {
		return m.Gtid
	}
	return ""
}

func (m *Operation) GetLastCommitted() int64 {
	if m != nil {
		return m.LastCommitted
	}
	return 0
}

func (m *Operation) GetSequenceNumber() int64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *Operation) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

func (m *Operation) GetStatement() string {
	if m != nil {
		return m.Statement
	}
	return ""
}

func (m *Operation) GetTable() *TableDef {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *Operation) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

func (m *Operation) GetProgress() *Progress {
	if m != nil {
		return m.Progress
	}
	return nil
}

func init() {
	proto.RegisterEnum("OperationType", OperationType_name, OperationType_value)
	proto.RegisterEnum("InnerType", InnerType_name, InnerType_value)
	proto.RegisterEnum("Compression", Compression_name, Compression_value)
	proto.RegisterType((*Message)(nil), "Message")
	proto.RegisterType((*Payload)(nil), "Payload")
	proto.RegisterType((*Column)(nil), "Column")
	proto.RegisterType((*Row)(nil), "Row")
	proto.RegisterType((*ColumnDef)(nil), "ColumnDef")
	proto.RegisterType((*TableDef)(nil), "TableDef")
	proto.RegisterType((*Progress)(nil), "Progress")
	proto.RegisterType((*OperationHeader)(nil), "OperationHeader")
	proto.RegisterType((*Operation)(nil), "Operation")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor_2bc2336598a3f7e0) }

var fileDescriptor_2bc2336598a3f7e0 = []byte{
	// 1085 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xd9, 0x8e, 0xe3, 0x54,
	0x10, 0xc5, 0x71, 0xe2, 0xa5, 0x12, 0xa7, 0x2f, 0x17, 0xc4, 0x98, 0x61, 0xd0, 0x44, 0x81, 0xd1,
	0x84, 0x46, 0xca, 0x43, 0x40, 0xe2, 0x39, 0x8b, 0xa7, 0xdb, 0x28, 0x71, 0xc2, 0x8d, 0x33, 0xa8,
	0xe7, 0x25, 0xb8, 0xe3, 0xdb, 0x99, 0x08, 0xc7, 0x76, 0xdb, 0x4e, 0x37, 0xfd, 0x05, 0x88, 0x77,
	0x7e, 0x83, 0x7f, 0xe2, 0x27, 0x58, 0x87, 0x4d, 0x75, 0xbd, 0xf4, 0x22, 0xf1, 0x56, 0x75, 0xaa,
	0xea, 0x9e, 0x53, 0x4b, 0x62, 0x68, 0xc7, 0x49, 0x94, 0x45, 0x9b, 0x28, 0xe8, 0x0b, 0xa3, 0xfb,
	0xb3, 0x04, 0xea, 0x8c, 0xa7, 0xa9, 0xb7, 0xe5, 0xd4, 0x04, 0xf5, 0x8a, 0x27, 0xe9, 0x2e, 0x0a,
	0x4d, 0xa9, 0x23, 0xf5, 0x0c, 0x56, 0xba, 0xf4, 0x29, 0x34, 0xe3, 0x24, 0xf2, 0x0f, 0x1b, 0x9e,
	0xac, 0x77, 0xbe, 0x59, 0xeb, 0x48, 0xbd, 0x3a, 0x83, 0x12, 0xb2, 0x7d, 0x4a, 0x40, 0x4e, 0xf9,
	0xa5, 0xd9, 0x10, 0x01, 0x34, 0xe9, 0x47, 0x60, 0xec, 0xa3, 0x84, 0xaf, 0x2f, 0x12, 0x6f, 0xbb,
	0xe7, 0x61, 0x66, 0x2a, 0x1d, 0xa9, 0xa7, 0xb1, 0x16, 0x82, 0x2f, 0x0a, 0x8c, 0xbe, 0x0f, 0xda,
	0x36, 0x89, 0x0e, 0x31, 0x3e, 0xaa, 0x8a, 0x5a, 0x55, 0xf8, 0xb6, 0x4f, 0xfb, 0xd0, 0xdc, 0x44,
	0xfb, 0x38, 0xe1, 0xa9, 0x10, 0xa4, 0x75, 0xa4, 0x5e, 0x7b, 0xd0, 0xea, 0x8f, 0x6f, 0x31, 0x76,
	0x37, 0x01, 0xc5, 0xc7, 0xde, 0x4d, 0x10, 0x79, 0xbe, 0x79, 0xd4, 0x91, 0x7a, 0x2d, 0x56, 0xba,
	0xdd, 0xe7, 0xa0, 0x2e, 0x72, 0x93, 0x3e, 0x01, 0x39, 0x8a, 0x53, 0x53, 0xea, 0xc8, 0xbd, 0xe6,
	0x00, 0xfa, 0xf3, 0x98, 0x27, 0x5e, 0x86, 0x4f, 0x21, 0xdc, 0xfd, 0x02, 0x94, 0x71, 0x14, 0x1c,
	0xf6, 0x21, 0x7d, 0x04, 0xea, 0x2e, 0x5d, 0x87, 0x87, 0x20, 0x10, 0x93, 0xd0, 0x98, 0xb2, 0x4b,
	0x9d, 0x43, 0x10, 0xd0, 0x77, 0xa1, 0x71, 0xe5, 0x05, 0x07, 0x2e, 0x46, 0xa0, 0xb3, 0xdc, 0xe9,
	0x5a, 0x20, 0xb3, 0xe8, 0x9a, 0x3e, 0x05, 0xe5, 0x9c, 0x5f, 0x44, 0x09, 0x2f, 0x08, 0xd4, 0x7e,
	0xfe, 0x1c, 0x2b, 0x60, 0xfa, 0x21, 0x34, 0xbc, 0x8b, 0x8c, 0x27, 0x66, 0xed, 0x7e, 0x3c, 0x47,
	0xbb, 0x3f, 0x49, 0xa0, 0xe7, 0xc8, 0x84, 0x5f, 0x50, 0x0a, 0xf5, 0xd0, 0xdb, 0x73, 0x21, 0x40,
	0x67, 0xc2, 0xc6, 0x79, 0xa5, 0x97, 0xc1, 0x3a, 0xbb, 0x89, 0x4b, 0x05, 0x6a, 0x7a, 0x19, 0xb8,
	0x37, 0x31, 0xa7, 0x9f, 0x00, 0xec, 0xc2, 0x90, 0x27, 0x79, 0x50, 0x16, 0xe3, 0x82, 0xbe, 0x8d,
	0x10, 0xc6, 0x99, 0xbe, 0x2b, 0x4d, 0xfa, 0x18, 0xb4, 0x43, 0x98, 0xee, 0xb6, 0x21, 0xf7, 0xcd,
	0xba, 0x68, 0xaf, 0xf2, 0x71, 0x91, 0xdf, 0xf2, 0x1b, 0xb1, 0x48, 0x9d, 0xa1, 0x89, 0x83, 0xdd,
	0xbc, 0xf6, 0x92, 0x94, 0xe7, 0x2b, 0xd4, 0x59, 0xe9, 0x76, 0xbf, 0x01, 0xcd, 0xf5, 0xce, 0x03,
	0x8e, 0x6a, 0x1f, 0x83, 0xe6, 0x7b, 0x99, 0x77, 0xee, 0xa5, 0xa5, 0xe2, 0xca, 0xaf, 0x3a, 0xa9,
	0xdd, 0xe9, 0xe4, 0x63, 0x50, 0x37, 0xa2, 0xd5, 0xd4, 0x94, 0x8b, 0x6d, 0x54, 0xad, 0xb3, 0x32,
	0xd4, 0xfd, 0x5e, 0x02, 0x6d, 0x91, 0x44, 0x5b, 0x5c, 0x32, 0x7d, 0x0f, 0x94, 0x8b, 0xc0, 0xbb,
	0x8a, 0x92, 0x82, 0xa0, 0xf0, 0xe8, 0x07, 0xa0, 0xa7, 0x3c, 0xb9, 0xba, 0x3d, 0x4d, 0x83, 0x69,
	0x39, 0x60, 0xfb, 0x38, 0xb1, 0x20, 0xda, 0xae, 0x05, 0xbf, 0x9c, 0xcb, 0x0f, 0xa2, 0xad, 0x83,
	0x12, 0x1e, 0x01, 0x9a, 0xeb, 0x38, 0x4a, 0xc5, 0x14, 0x0c, 0xa6, 0x04, 0xd1, 0x76, 0x11, 0xa5,
	0xa8, 0x77, 0x8b, 0xed, 0xe6, 0x43, 0x10, 0x76, 0xf7, 0x07, 0x09, 0x8e, 0xaa, 0x73, 0x39, 0xe5,
	0x9e, 0xcf, 0x1f, 0x10, 0x4b, 0x0f, 0x88, 0xbb, 0x50, 0xaf, 0xd6, 0xd4, 0x1e, 0xb4, 0x6f, 0x6f,
	0x4d, 0x6c, 0x43, 0xc4, 0xe8, 0x13, 0xd0, 0xb3, 0xdd, 0x9e, 0xa7, 0x99, 0xb7, 0x8f, 0x85, 0x3a,
	0x83, 0xdd, 0x02, 0xff, 0xab, 0xaf, 0xfb, 0xa6, 0x06, 0x7a, 0xf5, 0x1c, 0xed, 0x81, 0xf2, 0x5a,
	0xe8, 0x11, 0x12, 0x9a, 0x03, 0xd2, 0x7f, 0xa0, 0x93, 0x15, 0x71, 0xda, 0x05, 0x23, 0xe4, 0xdf,
	0x65, 0xeb, 0x6a, 0x20, 0xf9, 0x3e, 0x9b, 0x08, 0x4e, 0x8b, 0xa1, 0x74, 0xa0, 0x55, 0xe5, 0x20,
	0xb3, 0x2a, 0x98, 0xa1, 0x48, 0x29, 0xa7, 0x93, 0xed, 0x7c, 0xf1, 0x8b, 0xc4, 0xe9, 0x64, 0x3b,
	0x9f, 0x3e, 0x83, 0x76, 0xe0, 0xa5, 0xd9, 0x7a, 0x13, 0xed, 0xf7, 0xbb, 0x2c, 0xe3, 0xbe, 0xa9,
	0x77, 0xa4, 0x9e, 0xcc, 0x0c, 0x44, 0xc7, 0x25, 0x48, 0x9f, 0xc3, 0x51, 0xca, 0x2f, 0x0f, 0x3c,
	0xdc, 0xf0, 0x75, 0x78, 0xd8, 0x9f, 0xf3, 0xc4, 0x04, 0x91, 0xd7, 0x2e, 0x61, 0x47, 0xa0, 0xf7,
	0xae, 0xa9, 0xf9, 0xe0, 0x9a, 0x9e, 0x80, 0x9e, 0x66, 0x5e, 0xc6, 0xc5, 0x9f, 0x4a, 0x4b, 0x04,
	0x6f, 0x01, 0xfa, 0x14, 0x1a, 0x19, 0xde, 0xa4, 0x69, 0x88, 0x61, 0xe8, 0xfd, 0xf2, 0x42, 0x59,
	0x8e, 0x53, 0x13, 0xea, 0x49, 0x74, 0x9d, 0x9a, 0x6d, 0x71, 0x75, 0xf5, 0x3e, 0x8b, 0xae, 0x99,
	0x40, 0xe8, 0x33, 0xd0, 0xe2, 0xe2, 0xd6, 0xc4, 0x5f, 0x08, 0x56, 0x97, 0xc7, 0xc7, 0xaa, 0xd0,
	0x71, 0x06, 0xc6, 0xbd, 0x5d, 0x52, 0x00, 0x85, 0xcd, 0xdd, 0xa1, 0x6b, 0x91, 0xb7, 0xa8, 0x06,
	0xf5, 0x13, 0xd7, 0x9e, 0x10, 0x89, 0xea, 0xd0, 0x18, 0x59, 0x27, 0xb6, 0x43, 0x6a, 0x98, 0x30,
	0x9e, 0xcf, 0x66, 0xb6, 0x4b, 0x64, 0xb4, 0x6d, 0x67, 0x69, 0x31, 0x97, 0xd4, 0xd1, 0x5e, 0x2d,
	0x26, 0x58, 0xd8, 0x40, 0x7b, 0x62, 0x4d, 0x2d, 0xd7, 0x22, 0x0a, 0x96, 0x7e, 0xb5, 0xb2, 0xd8,
	0x19, 0x51, 0xa9, 0x0a, 0xf2, 0x64, 0x32, 0x25, 0xda, 0xf1, 0x8f, 0x32, 0xe8, 0xd5, 0x8f, 0x99,
	0x36, 0x41, 0x9d, 0x58, 0x63, 0x7b, 0x36, 0x9c, 0xe6, 0x9c, 0xae, 0xed, 0x9c, 0xe5, 0x9c, 0xcb,
	0xd3, 0x39, 0x73, 0x49, 0x0d, 0xc1, 0xe9, 0xdc, 0x39, 0x21, 0x32, 0x82, 0x2f, 0xa6, 0xf3, 0x61,
	0x41, 0x38, 0x99, 0xaf, 0x46, 0x53, 0x24, 0xd4, 0xa0, 0xee, 0xac, 0xa6, 0x53, 0xa2, 0x50, 0x03,
	0x74, 0xd7, 0x9e, 0x59, 0x4b, 0x77, 0x38, 0x5b, 0x10, 0x95, 0xb6, 0x40, 0xc3, 0x4a, 0x51, 0xad,
	0x61, 0xb5, 0xed, 0xb8, 0x83, 0xcf, 0x89, 0x8e, 0x15, 0x42, 0x2c, 0xe4, 0x8c, 0x33, 0x8b, 0x34,
	0x31, 0x19, 0x31, 0xe1, 0xb5, 0x10, 0x3f, 0xb3, 0x86, 0x8c, 0x18, 0x28, 0xd0, 0xb1, 0xbe, 0x16,
	0xe9, 0x6d, 0x74, 0x5e, 0x0e, 0xd9, 0xf8, 0x74, 0xc8, 0xc8, 0x11, 0x76, 0x34, 0xb2, 0x5d, 0x42,
	0x68, 0x1b, 0xa0, 0xa2, 0x1d, 0x90, 0xb7, 0x51, 0x46, 0xf9, 0xd4, 0x80, 0x50, 0x24, 0xce, 0xcd,
	0x77, 0xa8, 0x0e, 0xf5, 0x2f, 0x97, 0x73, 0x87, 0xfc, 0x22, 0xd1, 0x23, 0x00, 0x7c, 0xb7, 0xe8,
	0xfd, 0x57, 0x6c, 0xb9, 0x6e, 0x39, 0xab, 0x19, 0xf9, 0x4d, 0xa2, 0x1a, 0xc8, 0x4b, 0xcb, 0x25,
	0xbf, 0x4b, 0xb4, 0x8d, 0x1d, 0x39, 0x67, 0xeb, 0xd1, 0x74, 0x3e, 0x22, 0x7f, 0x48, 0x94, 0x40,
	0x73, 0x66, 0x4d, 0xec, 0xd5, 0x2c, 0x47, 0xfe, 0x14, 0x19, 0xd8, 0x60, 0xee, 0xbf, 0x11, 0xcf,
	0x08, 0xf3, 0x2f, 0x41, 0xf1, 0x72, 0xc8, 0xd6, 0x4b, 0x97, 0xd9, 0xce, 0x09, 0xf9, 0x5b, 0xa2,
	0x4d, 0x50, 0x0a, 0xe7, 0x1f, 0x89, 0x1a, 0xa0, 0x9d, 0x58, 0xf3, 0x99, 0xe5, 0xb2, 0x33, 0xf2,
	0xaf, 0x74, 0xfc, 0x29, 0x34, 0xef, 0x7c, 0x91, 0xc4, 0x50, 0xe7, 0x4e, 0x71, 0x08, 0xaf, 0xa6,
	0xf6, 0x88, 0x48, 0xe2, 0x24, 0x5e, 0xd9, 0x0b, 0x52, 0x3b, 0x57, 0xc4, 0x27, 0xf7, 0xb3, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x52, 0x83, 0xe8, 0xab, 0x84, 0x07, 0x00, 0x00,
}
